import inquirer from "inquirer";
import { configManager } from "../../utils/config";
import chalk from "chalk";

export async function deleteConfig(name?: string): Promise<void> {
  const configs = configManager.listConfigs();
  
  if (configs.length === 0) {
    console.log(chalk.yellow("‚ö†Ô∏è  No hay configuraciones para eliminar"));
    return;
  }

  let configToDelete = name;

  // Si no se especific√≥ un nombre, mostrar lista para seleccionar
  if (!configToDelete) {
    const answers = await inquirer.prompt([
      {
        type: "list",
        name: "config",
        message: "¬øQu√© configuraci√≥n deseas eliminar?",
        choices: configs,
      },
    ]);
    configToDelete = answers.config;
  }

  // Verificar que la configuraci√≥n existe
  if (!configToDelete) {
    console.error(chalk.red("‚ùå No se especific√≥ configuraci√≥n para eliminar"));
    return;
  }

  const config = configManager.loadConfig(configToDelete);
  if (!config) {
    console.error(chalk.red(`‚ùå No se encontr√≥ la configuraci√≥n '${configToDelete}'`));
    return;
  }

  // Confirmaci√≥n de eliminaci√≥n
  const confirmation = await inquirer.prompt([
    {
      type: "confirm",
      name: "confirm",
      message: `¬øEst√°s seguro de que deseas eliminar la configuraci√≥n '${configToDelete}'?`,
      default: false,
    },
  ]);

  if (!confirmation.confirm) {
    console.log(chalk.gray("Operaci√≥n cancelada"));
    return;
  }

  const success = configManager.deleteConfig(configToDelete);
  
  if (success) {
    console.log(chalk.green(`‚úÖ Configuraci√≥n '${configToDelete}' eliminada exitosamente`));
    
    // Si era la configuraci√≥n activa, informar al usuario
    const currentConfig = configManager.getCurrentConfig();
    if (!currentConfig) {
      console.log(chalk.yellow("‚ö†Ô∏è  No hay configuraci√≥n activa ahora"));
      if (configs.length > 1) { // Hab√≠a m√°s de una configuraci√≥n
        console.log(chalk.gray("üí° Usa 'butler-cli config use <nombre>' para activar otra"));
      }
    }
  } else {
    console.error(chalk.red(`‚ùå Error eliminando la configuraci√≥n '${configToDelete}'`));
  }
}